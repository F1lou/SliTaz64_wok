# SliTaz package receipt.

PACKAGE="systemd"
VERSION="248"
CATEGORY="base-system"
SHORT_DESC="System and service manager for Linux."
MAINTAINER="pankso@slitaz.org"
LICENSE="GPL2 LGPL2.1 MIT"
WEB_SITE="http://freedesktop.org/wiki/Software/systemd/"

TARBALL="v$VERSION.tar.gz"
WGET_URL="https://github.com/systemd/$PACKAGE/archive/refs/tags/$TARBALL"

DEPENDS="acl dbus glib kmod libcap libwrap pam pciutils usbutils util-linux-blkid"
BUILD_DEPENDS="acl-dev dbus-dev glib-dev glibc-dev gperf intltool \
	kmod-dev libcap-dev m4 pam-dev pciutils-dev pkg-config \
	usbutils-dev util-linux-blkid-dev util-linux-uuid-dev"
PROVIDE="udev"

#
# Systemd include udev source and must be splitted. Systemd can replace the full
# boot process and handle devices (with udisk) but is quite heavy and complicated.
# Our goal is to have automounting of removable media, since hal is dead we must
# use another way, but systemd-udisk-polkit and friends... seriously in SliTaz
# by default ?
#
# Actually we can have automount using the Kernel Polling feature and spacefm
#

# Rules to configure and make the package.
compile_rules()
{
	#~ patch --strip=0 --input=$stuff/systemd-195.journal-file.c.patch \
		#~ src/journal/journal-file.c
	#~ patch --strip=0 --input=$stuff/systemd-195.journal-vacuum.c.patch \
		#~ src/journal/journal-vacuum.c

	mkdir build && cd build
	meson --prefix=/usr .. &&
	ninja && ninja install

		#~ --with-sysvinit-path=				\
		#~ --with-sysvrcd-path=				\

}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	mkdir -p $fs/usr/lib
	mkdir -p $fs/usr/share

	cp -a $install/etc		$fs
	rm -rf $fs/etc/bash_*
	cp -a $install/var		$fs
	cp -a $install/usr/bin		$fs/usr
	cp -a $install/usr/lib/*.so*	$fs/usr/lib
	cp -a $install/usr/lib/*d	$fs/usr/lib
	cp -a $install/usr/lib/udev	$fs/usr/lib

	mkdir -p $fs/usr/lib/security
	cp -a $install/usr/share/*-1	$fs/usr/share
	cp -a $install/usr/share/systemd $fs/usr/share
	# For kernel opt: init=/bin/systemd
	mkdir -p $fs/bin
	cd $fs/bin && ln -s ../usr/lib/systemd/systemd systemd
}
